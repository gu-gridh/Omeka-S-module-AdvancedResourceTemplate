<?php
/**
 * @var \Laminas\View\Renderer\PhpRenderer $this
 * @var \Omeka\Api\Representation\AbstractResourceEntityRepresentation $resource
 * @var array|\AppendIterator $values
 * @var array $templateProperties
 *
 * Warning: this template is used by default by value-annotations.
 * In that case, only $values is available in version 4.0.
 * The same issue was fixed in #1634 and #1958.
 * @var \Omeka\Api\Representation\ValueAnnotationRepresentation|null $valueAnnotation
 */

// Wrap the core template view/common/resource-values with group labels, if any.

// Required as long as the value annotation is not passed.
// $isValueAnnotation = empty($resource) || !empty($valueAnnotation);

// This path should be updated to override it.
$mainViewTemplate = OMEKA_PATH . '/application/view/common/resource-values.phtml';

// When the module AdvancedResourceTemplate is not available, use default template.
// Normally useless, except when copied in a theme.
if (!$values || !class_exists('AdvancedResourceTemplate\Api\Representation\ResourceTemplatePropertyDataRepresentation')) {
    include $mainViewTemplate;
    return;
}

// Prepare plugins one time, since "include" is used, not partial().
$plugins = $this->getHelperPluginManager();

/*
// Can be used to optimize the included main view template when not using the core one.
if ($this->status()->isSiteRequest()) {
    $siteSetting = $plugins->get('siteSetting');
    $labelInfo = $siteSetting('property_label_information');
    $showLocale = (bool) $siteSetting('show_locale_label', true);
    $filterLocale = (bool) $siteSetting('filter_locale_values');
    $lang = $plugins->get('lang')();
    $valOptions = $filterLocale ? ['lang' => $lang] : [];
    $showValueAnnotations = (bool) $siteSetting('show_value_annotations', false);
} else {
    $setting = $plugins->get('setting');
    $labelInfo = $setting('property_label_information');
    $showLocale = true;
    $filterLocale = false;
    $lang = null;
    $valOptions = $filterLocale ? ['lang' => $lang] : [];
    $showValueAnnotations = true;
}
*/

// For compatibility with value annotations, waiting fix omeka/omeka-s#1999.
if (empty($resource)) {
    /** @var \Omeka\Api\Representation\ValueRepresentation $firstValueValue */
    $firstValue = is_array($values) ? reset($values) : $values->current();
    $firstValueValue = reset($firstValue['values']);
    $resource = $firstValueValue->resource();
}
$templateProperties ??= [];

/**
 * @var \AdvancedResourceTemplate\Api\Representation\ResourceTemplateRepresentation $template
 * @var array $groups
 */
$template = $resource->resourceTemplate();
$groups = $template ? $template->dataValue('groups') : null;

if (!$template || !$groups) {
    include $mainViewTemplate;
    return;
}

$escape = $plugins->get('escapeHtml');
$translate = $plugins->get('translate');
// $escapeAttr = $plugins->get('escapeHtmlAttr');
?>

<div class="property-groups">
    <?php
    // $values is an AppendIterator: array_filter(), count(), etc. cannot be used.
    $sourceValues = $values;
    foreach (array_keys($groups) as $groupLabel):
        $valuesGroup = new \AppendIterator();
        $sourceValuesFiltered = new \AppendIterator();
        foreach ($sourceValues as $term => $propertyData) {
            ($propertyData['group'] ?? '') === $groupLabel
                ? $valuesGroup->append(new \ArrayIterator([$term => $propertyData]))
                : $sourceValuesFiltered->append(new \ArrayIterator([$term => $propertyData]));
        }
        $sourceValues = $sourceValuesFiltered;
        if ($valuesGroup->key() !== null):
            $values = $valuesGroup;
        ?>
    <div class="property-group">
        <h4><?= $escape($groupLabel) ?></h4>
        <?php include $mainViewTemplate; ?>
    </div>
        <?php endif;
    endforeach;
    // Display metadata that are not in any group.
    if ($sourceValues->key() !== null):
        $values = $sourceValues; ?>
    <div class="property-group">
        <h3><?= $escape($translate('Other metadata')) ?></h3>
        <?php include $mainViewTemplate; ?>
    </div>
    <?php endif; ?>
</div>
