<?php
/**
 * @var \Laminas\View\Renderer\PhpRenderer $this
 * @var \Omeka\Api\Representation\AbstractResourceEntityRepresentation $resource
 * @var array $metadataByGroup
 */

// Adaptation of omeka view/common/resource-values with a main class and some improvements.
// There are no value annotation or trigger by default.

$plugins = $this->getHelperPluginManager();
$escape = $plugins->get('escapeHtml');
$assetUrl = $plugins->get('assetUrl');
$translate = $plugins->get('translate');
$siteSetting = $plugins->get('siteSetting');
$escapeAttr = $plugins->get('escapeHtmlAttr');

$components = $siteSetting('advancedresourcetemplate_block_metadata_components', []);

$showLabel = in_array('value_label', $components);
$showTerm = in_array('value_term', $components);
$showVocab = in_array('value_vocab', $components);
$showLocale = in_array('value_locale', $components);

$filterLocale = (bool) $siteSetting('filter_locale_values');
$lang = $this->lang();
$langValue = $filterLocale ? [$lang, ''] : null;
$langValueAsHtml = $langValue ? ['lang' => $langValue] : null;

$filterLocaleCallback = function (\Omeka\Api\Representation\ValueRepresentation $value) use ($lang): bool {
    $valueLang = $value->lang();
    return !$valueLang || strcasecmp($valueLang, $lang) === 0;
};

// According to html 5 specifications (@see https://www.w3.org/wiki/HTML/Elements/dl),
// <dl> requires at least one <dt>, so if labels are skipped (setting by default),
// <ul> should be used, unlike the main template common/resource-values.
// Warning: unlike dt/dd, the <li> are nested inside the <ul>.
if ($showLabel) {
    $tagMain = 'dl';
    $tagVal = 'dd';
} else {
    $tagMain = 'div';
    $tagVal = 'li';
}

$this->headLink()
    ->appendStylesheet($assetUrl('css/advanced-resource-template.css', 'AdvancedResourceTemplate'));
?>

<<?= $tagMain ?> class="block-resource block-metadata">
    <?php
    $values = $resource->values();
    foreach ($metadataByGroup as $group => $fields):
        // Get values ordered by the option.
        $selectedValues = array_filter(array_replace(array_intersect_key($fields, $values), array_intersect_key($values, $fields)));
        if (!count($selectedValues)) continue;
        [$groupClass, $groupLabel] = strpos($group, '=') === false ? [$group, ''] : array_map('trim', explode('=', $group, 2));
    ?>
    <div class="values-group <?= $escapeAttr($groupClass) ?>">
        <?php if ($groupLabel !== ''): ?>
        <h4><?= $escape($groupLabel) ?></h4>
        <?php endif; ?>
        <?php
        foreach ($selectedValues as $term => $propertyData):
            /**
             * @var \Omeka\Api\Representation\ValueRepresentation[] $propertyValues
             * @var \Omeka\Api\Representation\PropertyRepresentation $property
             */
            $propertyValues = $propertyData['values'];
            if ($filterLocale) {
                $propertyValues = array_filter($propertyValues, $filterLocaleCallback);
            }
            if (!$propertyValues) {
                continue;
            }
            $property = $propertyData['property'];
            if ($showLabel) {
                $propertyLabel = $fields[$term] ?: $propertyData['alternate_label'] ?: $translate($property->label());
            } else {
                $propertyLabel = null;
            }
            if ($showTerm) {
                $propertyTerm = $property->term();
            } elseif ($showVocab) {
                $propertyTerm = $property->vocabulary()->label();
            } else {
                $propertyTerm = null;
            }

            ?>
        <div class="property">
            <?php if ($showLabel): ?>
            <dt>
                <?= $escape($propertyLabel) ?>
                <?php if ($propertyTerm): ?>
                <span class="field-term">(<?= $escape($propertyTerm) ?>)</span>
                <?php endif; ?>
            </dt>
            <?php else: ?>
            <ul>
            <?php endif; ?>
            <?php foreach ($propertyValues as $value):
                $class = ['value'];
                $vr = $value->valueResource();
                $uri = $value->uri();
                if ($vr) {
                    $class[] = 'resource';
                    $class[] = $escape($vr->resourceName());
                } elseif ($uri) {
                    $class[] = 'uri';
                }
                $valueIsPublic = $value->isPublic();
                if (!$valueIsPublic) {
                    $class[] = 'private';
                }
                $valueLang = $value->lang();
            ?>
            <<?= $tagVal ?> class="<?= implode(' ', $class) ?>"<?= $valueLang ? ' lang="' . $escapeAttr($valueLang) . '"' : '' ?>>
                <?php if ($showLocale && $valueLang): ?>
                <span class="language"><?= $valueLang ?></span>
                <?php endif; ?>
                <span class="value-content"><?= $value->asHtml($langValueAsHtml) ?></span>
                <?php if (!$valueIsPublic): ?>
                <span class="o-icon-private" role="img" title="<?= $escapeAttr($translate('Private')) ?>" aria-label="<?= $escapeAttr($translate('Private')) ?>"></span>
                <?php endif; ?>
            </<?= $tagVal ?>>
            <?php endforeach; ?>
            <?php if (!$showLabel): ?>
            </ul>
            <?php endif; ?>
        </div>
        <?php endforeach; ?>
    </div>
    <?php endforeach; ?>
</<?= $tagMain ?>>
